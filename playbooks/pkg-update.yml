---
#Yeah, lots of ignore errors, mainly looking to get vars at some points, and the uri calls seem to fail while actually succeeding so I'd rather not have them end the PB unnessecarily early.
- hosts: "{{ selected_devices }}"
  gather_facts: yes
#  vars_prompt:
#    - name: rhel_pkg
#      prompt: Package to install for CentOS (Keep in mind this needs to have the right name for the YUM package manager)
#      private: no
#    - name: deb_pkg
#      prompt: Package to install for Debian (Keep in mind this needs to have the right name for the APT package manager)
#      private: no
#    - name: selected_devices
#      prompt: What Device(s) updates are needed for
#      private: no
  vars_files:
    - ../inventory/secrets/admin.yml

  tasks:

    - name: Upgrade Package - CentOS
      yum:
        name: '{{ rhel_pkg }}'
        state: latest
      register: rhel_results
      ignore_errors: yes
      become: yes
      when: 
      - ansible_os_family == "RedHat"
      - rhel_pkg is not undefined 
      - rhel_pkg.lower() != "all" 

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest
      register: rhel_results
      ignore_errors: yes
      become: yes
      when: 
      - ansible_os_family == "RedHat"
      - rhel_pkg is not undefined 
      - rhel_pkg.lower() == "all" 

    - debug:
        msg: "{{ rhel_results }}"
      when: 
      - ansible_os_family == "RedHat"
      - rhel_pkg is not undefined 

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: Package Update Successful
        body: "System {{ inventory_hostname }} has successfully updated {{ rhel_pkg }}"
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - ansible_os_family == "RedHat"
      - rhel_pkg is not undefined 
      - rhel_results.failed == false
      - rhel_results.changed == true
      - rhel_pkg.lower() != "all" 

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: System Update Successful
        body: "System {{ inventory_hostname }} has successfully been updated"
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - ansible_os_family == "RedHat"
      - rhel_pkg is not undefined 
      - rhel_results.failed == false
      - rhel_results.changed == true
      - rhel_pkg.lower() == "all" 

    - name: Upgrade Package - Debian
      apt:
        update_cache: yes
        name: "{{ deb_pkg }}"
        state: latest
      register: deb_results
      become: yes
      ignore_errors: yes
      when: 
      - ansible_os_family == "Debian"
      - deb_pkg is not undefined
      - deb_pkg.lower() != "all" 

    - name: Upgrade all packages
      apt:
        update_cache: yes
        name: '*'
        state: latest
      register: deb_results
      become: yes
      ignore_errors: yes
      when: 
      - ansible_os_family == "Debian"
      - deb_pkg is not undefined 
      - deb_pkg.lower() == "all" 

    - debug:
        msg: "{{ deb_results }}"
      when: 
      - ansible_os_family == "Debian"
      - deb_pkg is not undefined

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: Package Update Successful
        body: "System {{ inventory_hostname }} has successfully updated {{ deb_pkg }}"
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - ansible_os_family == "Debian"
      - deb_pkg is not undefined
      - deb_results.failed == false
      - deb_results.changed == true
      - deb_pkg.lower() != "all" 

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: System Update Successful
        body: "System {{ inventory_hostname }} has successfully been updated"
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - ansible_os_family == "Debian"
      - deb_pkg is not undefined
      - deb_results.failed == false
      - deb_results.changed == true
      - deb_pkg.lower() == "all" 

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        body: "{
          'assigned_object_type': 'dcim.device',
          'assigned_object_id': {{ id }},
          'kind': 'info',
          'comments': 'Automated Entry: Update Successful'
          }"
        validate_certs: no
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - not is_virtual
      - deb_pkg is not undefined or rhel_pkg is not undefined 
      - not deb_results.failed or not rhel_results.failed 
      - deb_results.changed | bool or rhel_results.changed | bool
      - deb_pkg.lower() == "all" or rhel_pkg.lower() == "all" 

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        body: "{
          'assigned_object_type': 'dcim.device',
          'assigned_object_id': {{ id }},
          'kind': 'info',
          'comments': 'Automated Entry: No Updates Needed after check'
        }"
        validate_certs: no
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - not is_virtual
      - deb_pkg is not undefined or rhel_pkg is not undefined 
      - not deb_results.failed or not rhel_results.failed 
      - not deb_results.changed or not rhel_results.changed
      - deb_pkg.lower() == "all" or rhel_pkg.lower() == "all" 

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        body: "{
          'assigned_object_type': 'virtualization.virtualmachine',
          'assigned_object_id': {{ id }},
          'kind': 'info',
          'comments': 'Automated Entry: Update Successful'
          }"
        validate_certs: no
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - is_virtual | bool
      - deb_pkg is not undefined or rhel_pkg is not undefined 
      - not deb_results.failed or not rhel_results.failed 
      - deb_results.changed | bool or rhel_results.changed | bool
      - deb_pkg.lower() == "all" or rhel_pkg.lower() == "all" 

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        body: "{
          'assigned_object_type': 'virtualization.virtualmachine',
          'assigned_object_id': {{ id }},
          'kind': 'info',
          'comments': 'Automated Entry: No Updates Needed after check'
        }"
        validate_certs: no
      delegate_to: localhost
      ignore_errors: yes
      when: 
      - is_virtual | bool
      - deb_pkg is not undefined or rhel_pkg is not undefined 
      - not deb_results.failed or not rhel_results.failed 
      - not deb_results.changed or not rhel_results.changed
      - deb_pkg.lower() == "all" or rhel_pkg.lower() == "all" 

