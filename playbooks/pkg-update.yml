---
#I'm almost done with the CentOS in my environment, this is going to be the first package management PB to change given it's ran fairly often
#Given that this is meant to be scheduled I also have it email on successes and report changes via journal entries in netbox
- hosts: "{{ selected_devices }}"
  gather_facts: yes
#  vars_prompt:
#    - name: pkg
#      prompt: Package to install for Debian (Keep in mind this needs to have the right name for the APT package manager)
#      private: no
#    - name: selected_devices
#      prompt: What Device(s) updates are needed for
#      private: no
  vars_files:
    - ../inventory/secrets/admin.yml

  tasks:

    - name: Upgrade Packages 
      apt:
        update_cache: yes
        name: "{{ pkg }}"
        state: latest
      register: results
      become: yes
      when: 
      - ansible_os_family == "Debian"
      - pkg is not undefined
      - pkg.lower() != "all" 

    - name: Upgrade all packages
      apt:
        update_cache: yes
        name: '*'
        state: latest
      register: results
      become: yes
      when: 
      - ansible_os_family == "Debian"
      - pkg is not undefined 
      - pkg.lower() == "all" 

    - debug:
        msg: "{{ results }}"
      when: 
      - ansible_os_family == "Debian"
      - pkg is not undefined

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: Package Update Successful
        body: "System {{ inventory_hostname }} has successfully updated {{ pkg }}"
      delegate_to: localhost
      when: 
      - ansible_os_family == "Debian"
      - results is not undefined
      - results.changed | bool 
      - pkg.lower() != "all" 

    - name: Mail Alerts
      mail:
        host: "{{ mail_srv }}"
        port: 587
        username: "{{ alerts_mail_acct }}"
        password: "{{ alerts_mail_pw }}"
        to: "{{ to_address }}"
        from: "{{ alerts_mail_acct }}"
        subject: System Update Successful
        body: "System {{ inventory_hostname }} has successfully been updated"
      delegate_to: localhost
      when: 
      - ansible_os_family == "Debian"
      - results is defined
      - results.changed | bool
      - pkg.lower() == "all"

#No need to email if there's nothing changing

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        status_code: 200, 201, 208
        body: "{
          'assigned_object_type': '{% if is_virtual %}virtualization.virtualmachine{% else %}dcim.device{% endif %}',
          'assigned_object_id': {{ id }},
          'kind': 'success',
          'comments': 'Automated Entry: Update Successful'
          }"
        validate_certs: no
      delegate_to: localhost
      when: 
      - ansible_os_family == "Debian"
      - results.changed | bool
      - results is defined 
      - pkg.lower() == "all" 

    - name: Send Journal Entry to Netbox
      uri:
        url: "{{ nb_url }}/api/extras/journal-entries/"
        method: POST
        headers:
          accept: "application/json"
          Authorization: "Token {{ nb_token }}"
        force_basic_auth: yes
        body_format: json
        status_code: 200, 201, 208
        body: "{
          'assigned_object_type': '{% if is_virtual %}virtualization.virtualmachine{% else %}dcim.device{% endif %}',
          'assigned_object_id': {{ id }},
          'kind': 'info',
          'comments': 'Automated Entry: No Updates Needed after check'
        }"
        validate_certs: no
      delegate_to: localhost
      when: 
      - ansible_os_family == "Debian"
      - not results.changed 
      - results is defined 
      - pkg.lower() == "all" 

